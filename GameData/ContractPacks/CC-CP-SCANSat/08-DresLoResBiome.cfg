CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanDresLoResBiome
    group = SCANsat

    // Contract text
    title = Altimetry & Biome Scan of Dres
    description = Our knowledge of the solar system is growing mission by mission and we're starting to get a reputation! Our nearest neighbors are now all under heavy observation so now we must expidite a mission to Dres.\n\nTip: Take along some of your other science gear to earn more science!
    synopsis = Send a single unkerbaled vessel to Dres. Reach a 255km orbit with a 79.5 degree inclination and scan Dres's surface with both the SCAN Radar Altimetry Sensor and the SCAN Multispectral Sensor. \n\nYou'll see a suggested orbit for each in the Tracking Station, but feel free to just hit the targets below.
    completedMessage = Dres turned out to be barely a planet at all, more like a large asteroid. Good work regardless. Getting this information was still valuble.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Dres
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards
    advanceFunds = 8000.0
	rewardScience = 10.0
	rewardReputation = 14.0
    rewardFunds = 19286
	   
	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant

	PARAMETER
	{
		// Named for the German astronomer Johann Daniel Titius who first noticed that there was a gap between Mars and Jupiter where there should not be one according to the titius-bode law.
		name = Titius1
		type = VesselParameterGroup

        define = Titius I
        duration = 12h 5m
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		// ready for next release
//		PARAMETER
//		{
//			name = PartValidation
//			type = PartValidation
		
//			  VALIDATE
//				{
//					part = SCANsat_Scanner
//					minCount = 1
//				}
				
//				VALIDATE
//				{
//					part = SCANsat_Scanner24
//					minCount = 1
//				}
//		}		
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			//minCount = 1
			//maxCount = 1
		}
		
		PARAMETER
		{
			name = PartValidation2
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}

			
		PARAMETER
		{
			title = Achieve an orbit with the following parameters
			name = Orbit
			type = Orbit
			targetBody = Dres
			minApA = 252536
			maxApA = 257963
			minPeA = 252109
			maxPeA = 257635
			maxEccentricity = 0.002
			minInclination = 71.9
			maxInclination = 72.5
			disableOnStateChange = false
		}
	}
		
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage

		coverage = 50.0
		scanType = AltimetryLoRes
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = SCANsatCoverage2
		type = SCANsatCoverage

		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}

	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Mun

			// Contract is not valid unless Mun has 50% Biome data
			maxCoverage = 100.0
			minCoverage = 50.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = Biome
		}
		
		REQUIREMENT
		{
			name = SCANsatCoverage4
			type = SCANsatCoverage

			targetBody = Minmus

			// Contract is not valid unless Minmus has 50% Biome data
			maxCoverage = 100.0
			minCoverage = 50.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = Biome
		}

		REQUIREMENT
		{
			name = SCANsatCoverage5
			type = SCANsatCoverage

			targetBody = Dres

			// Maximum coverage that must be reached before the contract is valid.
			maxCoverage = 49.9
			minCoverage = 0.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = AltimetryLoRes
		}
	}
		
	BEHAVIOUR
	{
		name = OrbitGenerator1
		type = OrbitGenerator

		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Dres

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Dres surface is SMA = 138000
			{
				SMA = 393000
				ECC = 0.00181
				INC = 79.5
				LPE = 76
				LAN = 39
				REF = 1
			}
		}
	}
}
