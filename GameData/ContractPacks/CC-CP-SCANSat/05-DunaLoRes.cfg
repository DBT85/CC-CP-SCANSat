CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanDunaLoRes

    // Contract text
    title = Altimetry Scan of Duna
    description = Now that we have most of the data from Mun and Minmus the guys feel ready to get another launch on the way, this time to Duna! We've got all these spare rocket parts laying around so it seems like a good idea.
    synopsis = Send an unkerbaled vessel into Duna orbit, reach a 378km orbit with an 84.1 degree inclination and scan Duna's surface with the SCAN Radar Altimetry Sensor. \n\nYou'll see a suggested orbit in the Tracking Station, but feel free to just hit the targets below.
    notes = Tip: You'll need to complete your optional part before your main part, if you choose to take the challenge on!
    completedMessage = Boy was that worth it! 17 different craters, 50 shades of orange and 4 dried up riverbeds. Astonishing!

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Duna
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards Duna multiplies by 6.25
    advanceFunds = 8800.0
	rewardScience = 11.0
	rewardReputation = 15.0
    rewardFunds = 19800.0
	   
	// Can only be done once and only offered once at a time
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	// very likely to be chosen
	//weight = 10.0

	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Maxwell5
		type = VesselParameterGroup

        define = Maxwell V
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			//minCount = 1
			//maxCount = 1
		}
	
				
		PARAMETER
		{
			title = Achieve an orbit with the following parameters
			name = Orbit
			type = Orbit
			targetBody = Duna
			minApA = 375251
			maxApA = 381314
			minPeA = 375124
			maxPeA = 381268
			minEccentricity = 0.0
			maxEccentricity = 0.0022
			minInclination = 83.64
			maxInclination = 84.64
			disableOnStateChange = false
		}
		
		// Once all of the above are complete, start the countdown.
		PARAMETER
		{
			name = Duration
			type = Duration

			duration = 1d 3h

			preWaitText = We need a stable orbit for at least 
			waitingText = Orbit acquired, monitoring.
			completionText = Stable orbit confirmed!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Duna
		coverage = 50.0
		scanType = AltimetryLoRes
	}
		
	PARAMETER
    {
		name = Option
        type = All

        title = (Optional) Take an additional vessel and grab some Altimetry data from Ike
        optional = True
		
        // Parameter rewards
        rewardScience = 4
        rewardReputation = 5
        rewardFunds = 6400
	
		PARAMETER
		{
			// Named for the German physicist who discovered that electromagnetic waves passed through some objects, while reflecting off others
			name = Hertz2
			type = VesselParameterGroup

			define = Hertz II
			disableOnStateChange = false
			
			PARAMETER
			{
				title = Achieve an orbit around
				name = Orbit
				type = Orbit
				targetBody = Ike
				minApA = 398325
				maxApA = 403512
				minPeA = 398214
				maxPeA = 403135
				maxEccentricity = 0.0022
				minInclination = 73.67
				maxInclination = 74.67
				disableOnStateChange = false
			}
		}

		PARAMETER
		{
			name = SCANsatCoverage2
			type = SCANsatCoverage
			targetBody = Ike
			coverage = 25.0
			scanType = AltimetryLoRes
		}
	}
		
	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Mun

			// Contract is not valid unless Mun has 90% LoRes data
			maxCoverage = 100.0
			minCoverage = 90.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = AltimetryLoRes
		}
		
		REQUIREMENT
		{
			name = SCANsatCoverage4
			type = SCANsatCoverage

			targetBody = Minmus

			// Contract is not valid unless Minmus has 90% LoRes data
			maxCoverage = 100.0
			minCoverage = 90.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = AltimetryLoRes
		}

		REQUIREMENT
		{
			name = SCANsatCoverage5
			type = SCANsatCoverage

			targetBody = Duna

			// Maximum coverage that must be reached before the contract is valid.
			maxCoverage = 49.9
			minCoverage = 0.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = AltimetryLoRes
		}
	}
		
	BEHAVIOUR
	{
		name = OrbitGenerator1
		type = OrbitGenerator

		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Duna

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Duna surface is SMA = 320000
			{
				SMA = 698000
				ECC = 0.0011
				INC = 84.14
				LPE = 279
				LAN = 37
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Ike

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Duna surface is SMA = 130000
			{
				SMA = 531500
				ECC = 0.00111
				INC = 74.1
				LPE = 27
				LAN = 63
				REF = 1
			}
		}
	}
}
