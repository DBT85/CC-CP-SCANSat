CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0
	
    name = ScanDunaMultispectral

    // Contract text
    title = Multispectral Scan of Duna
    description = Maxwell V hasn't yet begun transmitting data home, but that won't stop us launching another mission to Duna! The more the merrier, right?
    synopsis = Send an unkerbaled vessel into Duna orbit, reach a 438400km orbit with an 83.37 degree inclination and scan Duna's surface with the SCAN Multispectral Sensor. \n\nYou'll see a suggested orbit in the Tracking Station, but feel free to just hit the targets below.
    notes = Tip: You'll need to complete your optional part before your main part, if you choose to take the challenge on!
    completedMessage = Preliminary scans are coming back and it seems Duna might have as many as 5 different biomes and 27 different flavours of ice.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Duna
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards Eve multiplies by 6.25
    advanceFunds = 1000.0
	rewardScience = 10.0
	rewardReputation = 10.0
    rewardFunds = 10000.0
	   
	// Can only be done once and offered once at a time
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	// very likely to be chosen
	//weight = 10.0

	PARAMETER
	{
		// Named for the GeoEye satellite surveying Earth
		name = GeoEye5
		type = VesselParameterGroup

        define = GeoEye V
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Achieve an orbit with the following parameters
			name = Orbit
			type = Orbit
			targetBody = Duna 438400
			minApA = 426130
			maxApA = 440503
			minPeA = 426098
			maxPeA = 440349
			maxEccentricity = 0.0021
			minInclination = 83.07
			maxInclination = 83.67
			disableOnStateChange = false
		}
		
		// Once all of the above are complete, start the countdown.
		PARAMETER
		{
			name = Duration
			type = Duration

			duration = 1d 1h

			preWaitText = We need a stable orbit for at least 
			waitingText = Orbit acquired, monitoring.
			completionText = Stable orbit confirmed!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Duna
		coverage = 50.0
		scanType = Biome
	}

	PARAMETER
    {
		name = Option
        type = All

        title = (Optional) Take an additional vessel and grab some data from Gilly
        optional = True

        // Parameter rewards
        rewardScience = 10
        rewardReputation = 10
        rewardFunds = 10000
		
		PARAMETER
		{
		
			// Named for the Lockheed Martin satellite which was the first to gather publicly available high res imagery, launched in 1999.
			name = IKONOS2
			type = VesselParameterGroup

			define = IKONOS II
			disableOnStateChange = false
			
			PARAMETER
			{
				title = Achieve an orbit around
				name = Orbit
				type = Orbit
				targetBody = Ike 156100
				minApA = 154532
				maxApA = 157952
				minPeA = 154425
				maxPeA = 157869
				maxEccentricity = 0.04
				minInclination = 83.52
				maxInclination = 84.12
				disableOnStateChange = false
			}
		}
		
		PARAMETER
		{
			name = SCANsatCoverage2
			type = SCANsatCoverage
			targetBody = Ike
			coverage = 25.0
			scanType = Biome
		}
		
    }
	
	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Mun

			// Contract is not valid unless Mun has 75% Biome data
			maxCoverage = 100.0
			minCoverage = 75.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = Biome
		}
		
		REQUIREMENT
		{
			name = SCANsatCoverage4
			type = SCANsatCoverage

			targetBody = Minmus

			// Contract is not valid unless Minmus has 75% Biome data
			maxCoverage = 100.0
			minCoverage = 75.0		

			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
			scanType = Biome
		}
		
		REQUIREMENT
		{
			name = SCANsatCoverage5
			type = SCANsatCoverage

			targetBody = Duna

			// Maximum coverage that must be reached before the contract is valid.
			maxCoverage = 49.9
			minCoverage = 0.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = Biome
		}
		
		REQUIREMENT
		{
			name = SCANsatCoverage6
			type = SCANsatCoverage

			targetBody = Duna

			// Do not offer contract if ANY LoRes data is available from Duna
			maxCoverage = 0.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = LoResAltimetry
		}
		
	}
	
		
	BEHAVIOUR
	{
	name = OrbitGenerator1
	type = OrbitGenerator

		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Duna

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Duna surface is SMA = 320000
			{
				SMA = 758400
				ECC = 0.0011
				INC = 83.37
				LPE = 1
				LAN = 86
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Ike

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Ike surface is SMA = 130000
			{
				SMA = 286100
				ECC = 0.0016
				INC = 83.82
				LPE = 25
				LAN = 31
				REF = 1
			}
		}
	}
}
