CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanMunMinmusMultispectral

    // Contract text
    title = Multispectral Scan of Mun & Minmus
    description = After all the work you've done discovering biomes here at home we're starting to wonder if there aren't also different biomes on our moons. Dispatch some ships to find out, and make it snappy.
    synopsis = Send a pair of unkerbaled vessels into orbits around our moons. For Mun, reach a 234.1km orbit with an 87.1 degree inclination. For Minmus, reach a 273.9km orbit with a 44.4 degree inclination. Scan both surfaces with the SCAN Multispectral Sensor. \n\nYou'll see a suggested orbit in the Tracking Station, but feel free to just hit the targets below. \n\nYou may also still have Maxwell II and Maxwell III in their respective orbits around the moons. If you can, bring them to an end and help keep space clean.
    completedMessage = As we suspected both Mun and Minmus are littered with different biomes. There must be a wealth of science to collect from each one!

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
	targetBody = Mun
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards
    advanceFunds = 18000
	rewardScience = 23
	rewardReputation = 32
    rewardFunds = 40500

	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	// very likely to be chosen
	//weight = 10.0
	
	PARAMETER
	{
		
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye2
		type = VesselParameterGroup

        define = GeoEye II
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
		 
		PARAMETER
		{
			title = Achieve an orbit with the following parameters
			name = Orbit
			type = Orbit
			targetBody = Mun
			minApA = 232223
			maxApA = 236341
			minPeA = 232165
			maxPeA = 236247
			maxEccentricity = 0.00201
			minInclination = 86.6
			maxInclination = 87.6
			disableOnStateChange = false
		}
		
		// Once all of the above are complete, start the countdown.
		PARAMETER
		{
			name = Duration
			type = Duration

			duration = 1d 4h 20m

			preWaitText = We need a stable orbit for at least 
			waitingText = Orbit acquired, monitoring.
			completionText = Stable orbit confirmed!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Mun
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp
        type = All

        title = (Optional 1) De-Orbit Maxwell II, our previous SCANSat around Mun
        optional = True
		
		// Parameter rewards
        rewardScience = 2
        rewardReputation = 3
        rewardFunds = 4000
	
		PARAMETER
		{
			name = OrbitEnd
			type = VesselParameterGroup
			
			// Select Maxwell I, the first SCANSat we launched.
			vessel = Maxwell II

			disableOnStateChange = false
			
			// Set the orbit to be suborbital.
			PARAMETER
			{
				name = orbitend
				type = ReachState
				targetBody = Mun
				situation = SUB_ORBITAL
			}
		}
	}
	
	// second part of mission starts here	
	PARAMETER
	{
		
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye3
		type = VesselParameterGroup

        define = GeoEye III
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation2
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
		 
		PARAMETER
		{
			title = Achieve an orbit with the following parameters
			name = Orbit
			type = Orbit
			targetBody = Minmus
			minApA = 248943
			maxApA = 251114
			minPeA = 248901
			maxPeA = 251036
			maxEccentricity = 0.00214
			minInclination = 76.7
			maxInclination = 77.3
			disableOnStateChange = false
		}
		
		// Once all of the above are complete, start the countdown.
		PARAMETER
		{
			name = Duration
			type = Duration

			duration = 2d 3h 45m

			preWaitText = We need a stable orbit for at least 
			waitingText = Orbit acquired, monitoring.
			completionText = Stable orbit confirmed!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage2
		type = SCANsatCoverage
		targetBody = Minmus
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp1
        type = All

        title = (Optional 2) De-Orbit Maxwell III, our previous SCANSat around Minmus
        optional = True
		
		// Parameter rewards
        rewardScience = 2
        rewardReputation = 3
        rewardFunds = 4000
	
		PARAMETER
		{
			name = OrbitEnd
			type = VesselParameterGroup
			
			// Select Maxwell III, the first SCANSat we launched.
			vessel = Maxwell III

			disableOnStateChange = false
			
			// Set the orbit to be suborbital.
			PARAMETER
			{
				name = orbitend
				type = ReachState
				targetBody = Minmus
				situation = SUB_ORBITAL
			}
		}
	}
	
	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Kerbin

			// Minimum coverage that must be reached before the contract is valid.
			maxCoverage = 100.0
			minCoverage = 50.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = Biome

			REQUIREMENT
			{
				name = SCANsatCoverage4
				type = SCANsatCoverage

				targetBody = Minmus

				// Maximum coverage that must be reached before the contract is valid.
				maxCoverage = 49.9
				minCoverage = 0.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = Biome
			}
			
				REQUIREMENT
			{
				name = SCANsatCoverage5
				type = SCANsatCoverage

				targetBody = Mun

				// Maximum coverage that must be reached before the contract is valid.
				maxCoverage = 49.9
				minCoverage = 0.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = Biome
			}

	}
	
	BEHAVIOUR
	{
    name = OrbitGenerator1
    type = OrbitGenerator

		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Mun

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Mun surface is SMA = 200000
			{
				SMA = 434100
				ECC = 0.00013
				INC = 87.1
				LPE = 25
				LAN = 5
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Minmus

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Minmus surface is SMA = 60000
			{
				SMA = 310131
				ECC = 0.000132
				INC = 77
				LPE = 134
				LAN = 236
				REF = 1
			}
		}
	}
	
}
