CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanMunMinmusMultispectral
    group = SCANsat

    // Contract text
    title = Multispectral Scan of Mun & Minmus
    description = After all the work you've done discovering biomes here at home we're starting to wonder if there aren't also different biomes on our moons. Dispatch some ships to find out, and make it snappy.
    synopsis = Send a pair of unkerbaled vessels into orbits around our moons and scan both surfaces with the SCAN Multispectral Sensor. For Mun a suggested orbit is 234.1km with a 87.1 degree inclination. For Minmus we think a 273.9km orbit with a 44.4 degree inclination should do the trick. \n\nYou may also still have Maxwell II and Maxwell III in their respective orbits around the moons. If you can, bring them to an end and help keep space clean.
    completedMessage = As we suspected both Mun and Minmus are littered with different biomes. There must be a wealth of science to collect from each one! We think that with the right ship and the right crew, at least 11 Science can be gathered.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
	targetBody = Mun
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards
    advanceFunds = 18000
	rewardScience = 23
	rewardReputation = 32
    rewardFunds = 40500

	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	PARAMETER
	{
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye2
		type = VesselParameterGroup

	        define = GeoEye II
	        type = Orbit
		targetBody = Mun
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
	}	 
	PARAMETER
	{
		title = Achieve an orbit with the following parameters
		name = Orbit
		type = Orbit
		targetBody = Mun
		minApA = 232223
		maxApA = 236341
		minPeA = 232165
		maxPeA = 236247
		maxEccentricity = 0.00201
		minInclination = 86.6
		maxInclination = 87.6
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Mun
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp
        type = All

        title = (OPTIONAL 1) De-Orbit Maxwell II, our previous SCANSat around Mun
        optional = True
		
		// Parameter rewards
        rewardScience = 2
        rewardReputation = 3
        rewardFunds = 4000
	
		PARAMETER
		{
			name = OrbitEnd
			type = VesselParameterGroup
			
			// Select Maxwell I, the first SCANSat we launched.
			vessel = Maxwell II

			PARAMETER
			{
			    name = VesselDestroyed
			    type = VesselDestroyed
			
			    // Text for the contract parameter.
			    // Default varies depending on the situation.
			    title = Maxwell II has seen it's service life end as expected. I wonder where it crashed?
			}
		}
	}
	
	// second part of mission starts here	
	PARAMETER
	{
		
		// Named for the GeoEye satellite launched in 2008
		name = GeoEye3
		type = VesselParameterGroup
		type = Orbit
		targetBody = Minmus
		define = GeoEye III
	
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation2
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
	}	 
	PARAMETER
	{
		title = Achieve an orbit with the following parameters
		name = Orbit
		type = Orbit
		targetBody = Minmus
		minApA = 248943
		maxApA = 251114
		minPeA = 248901
		maxPeA = 251036
		maxEccentricity = 0.00214
		minInclination = 76.8
		maxInclination = 77.1
		disableOnStateChange = false
	}
	
	
	PARAMETER
	{
		name = SCANsatCoverage2
		type = SCANsatCoverage
		targetBody = Minmus
		
		// Get 50% coverage to complete
		coverage = 50.0
		scanType = Biome
		disableOnStateChange = false
	}
	
	PARAMETER
	{
		name = OrbitEndGrp1
		type = All

		title = (OPTIONAL 2) De-Orbit Maxwell III, our previous SCANSat around Minmus
		optional = True
		
		// Parameter rewards
		rewardScience = 2
		rewardReputation = 3
		rewardFunds = 4000
	
		PARAMETER
		{
			name = OrbitEnd
			type = VesselParameterGroup
			
			// Select Maxwell III, the first SCANSat we launched.
			vessel = Maxwell III
			
			PARAMETER
			{
			    name = VesselDestroyed
			    type = VesselDestroyed
			
			    // Text for the contract parameter.
			    // Default varies depending on the situation.
			    title = Maxwell III has seen it's service life end as expected. Well done.
			}
		}
	}
	
	REQUIREMENT
	{
		name = All1
		type = All
	
		REQUIREMENT
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage

			targetBody = Kerbin

			// Minimum coverage that must be reached before the contract is valid.
			maxCoverage = 100.0
			minCoverage = 50.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = Biome

			REQUIREMENT
			{
				name = SCANsatCoverage4
				type = SCANsatCoverage

				targetBody = Minmus

				// Maximum coverage that must be reached before the contract is valid.
				maxCoverage = 49.9
				minCoverage = 0.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = Biome
			}
			
			REQUIREMENT
			{
				name = SCANsatCoverage5
				type = SCANsatCoverage

				targetBody = Mun

				// Maximum coverage that must be reached before the contract is valid.
				maxCoverage = 49.9
				minCoverage = 0.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = Biome
			}
			
			REQUIREMENT
			{
				name = SCANsatCoverage5
				type = SCANsatCoverage

				targetBody = Minmus

				// Minmus must be mostly mapped before the contract is valid.
				maxCoverage = 100
				minCoverage = 95.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = LoRes
			}
			
			REQUIREMENT
			{
				name = SCANsatCoverage6
				type = SCANsatCoverage

				targetBody = Mun

				// Mun must be mostly mapped before the contract is valid
				maxCoverage = 100
				minCoverage = 95.0

				// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
				scanType = LoRes
			}
		}
	}
}
