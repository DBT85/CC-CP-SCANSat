CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0

    name = ScanJovianMoons

    // Contract text
    title = Jovian Altimetry and Biome Scans
    description = We're 17% certain that Jool is a gas giant and as such we're not going to be able to get any Altimetry or Biome data from it. Despite that, however, Jool is blessed with 5 moons which all appear fairly solid. Send a small fleet there to discover the secrets of Jovian space.
    synopsis = Send 5 unkerbaled vessels into the vicinity of Jool and dispatch one to each of the moons. Perform surface scans with both the SCAN Radar Altimetry Sensor and the SCAN Multispectral Sensor. \n\nYou'll see suggested orbits in the Tracking Station, but feel free to choose your own.
    completedMessage = The probes have completed a great deal of their work and our people will be analysing this data for at least 8 minutes. Congratulate your team, great work.

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Jool
	
	// Always offered by the R&D department
	agent = Research & Development Department
	
    // Contract rewards
    advanceFunds = 10000.0
	rewardScience = 10.0
	rewardReputation = 10.0
    rewardFunds = 10000.0
	   
	// Can only be done once and only offered once at a time
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	// very likely to be chosen
	//weight = 10.0

	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Galileo1
		type = VesselParameterGroup

        define = Galileo 1
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Get into orbit around Laythe to begin your scans
			name = Orbit1
			type = ReachState
			targetBody = Laythe
			situation = ORBITING			
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Galileo2
		type = VesselParameterGroup

        define = Galileo 2
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew2
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation2
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Get into orbit around Vall to begin your scans
			name = Orbit2
			type = ReachState
			targetBody = Vall
			situation = ORBITING			
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Galileo3
		type = VesselParameterGroup

        define = Galileo 3
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew3
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation3
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Get into orbit around Tylo to begin your scans
			name = Orbit3
			type = ReachState
			targetBody = Tylo
			situation = ORBITING			
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Galileo4
		type = VesselParameterGroup

        define = Galileo 4
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew4
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation4
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Get into orbit around Bop to begin your scans
			name = Orbit4
			type = ReachState
			targetBody = Bop
			situation = ORBITING			
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Galileo5
		type = VesselParameterGroup

        define = Galileo 5
        disableOnStateChange = false
			
		PARAMETER
		{
			name = HasCrew5
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = PartValidation5
			type = PartValidation
			//title = Dont forget this!
			part = SCANsat_Scanner
			part = SCANsat_Scanner24
			//minCount = 1
			//maxCount = 1
		}
				
		PARAMETER
		{
			title = Get into orbit around Pol to begin your scans
			name = Orbit5
			type = ReachState
			targetBody = Pol
			situation = ORBITING			
			disableOnStateChange = false
		}
	}
	
	PARAMETER
	{
		name = AllScans
		type = All
	
		PARAMETER
		{
			name = SCANsatCoverage1
			type = SCANsatCoverage
			targetBody = Laythe
			coverage = 50.0
			scanType = AltimetryLoRes
		}
		
		PARAMETER
		{
			name = SCANsatCoverage2
			type = SCANsatCoverage
			targetBody = Vall
			coverage = 50.0
			scanType = AltimetryLoRes
		}		
		
		PARAMETER
		{
			name = SCANsatCoverage3
			type = SCANsatCoverage
			targetBody = Tylo
			coverage = 50.0
			scanType = AltimetryLoRes
		}
		
		PARAMETER
		{
			name = SCANsatCoverage4
			type = SCANsatCoverage
			targetBody = Bop
			coverage = 50.0
			scanType = AltimetryLoRes
		}
		
		PARAMETER
		{
			name = SCANsatCoverage5
			type = SCANsatCoverage
			targetBody = Pol
			coverage = 50.0
			scanType = AltimetryLoRes
		}
		
		PARAMETER
		{
			name = SCANsatCoverage1a
			type = SCANsatCoverage
			targetBody = Laythe
			coverage = 50.0
			scanType = Biome
		}
			
		PARAMETER
		{
			name = SCANsatCoverage2a
			type = SCANsatCoverage
			targetBody = Vall
			coverage = 50.0
			scanType = Biome
		}
		
		PARAMETER
		{
			name = SCANsatCoverage3a
			type = SCANsatCoverage
			targetBody = Tylo
			coverage = 50.0
			scanType = Biome
		}
		
		PARAMETER
		{
			name = SCANsatCoverage4a
			type = SCANsatCoverage
			targetBody = Bop
			coverage = 50.0
			scanType = Biome
		}
		
		PARAMETER
		{
			name = SCANsatCoverage5a
			type = SCANsatCoverage
			targetBody = Pol
			coverage = 50.0
			scanType = Biome
		}
	}
//	REQUIREMENT
//	{
//		name = All1
//		type = All
//	
//		REQUIREMENT
//		{
//			name = SCANsatCoverage6
//			type = SCANsatCoverage
//
//			targetBody = Mun
//
//			// Contract is not valid unless Mun has 90% Biome data
//			maxCoverage = 100.0
//			minCoverage = 90.0		
//
//			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
//			scanType = AltimetryLoRes
//		}
//		
//		REQUIREMENT
//		{
//			name = SCANsatCoverage7
//			type = SCANsatCoverage
//
//			targetBody = Minmus
//
//			// Contract is not valid unless Minmus has 90% Biome data
//			maxCoverage = 100.0
//			minCoverage = 90.0		
//
//			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
//			scanType = AltimetryLoRes
//		}

		REQUIREMENT
		{
			name = SCANsatCoverage8
			type = SCANsatCoverage

			targetBody = Laythe

			// Maximum coverage that must be reached before the contract is valid.
			maxCoverage = 49.9
			minCoverage = 0.0

			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
			scanType = AltimetryLoRes
		}
//	}
		
	BEHAVIOUR
	{
		name = OrbitGenerator1
		type = OrbitGenerator

		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Laythe

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Laythe surface is SMA = 500000
			{
				SMA = 981800
				ECC = 0.0011
				INC = 85.25
				LPE = 23
				LAN = 309
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Vall

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Vall surface is SMA = 300000
			{
				SMA = 557000
				ECC = 0.0011
				INC = 86.9
				LPE = 26
				LAN = 236
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Tylo

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Tylo surface is SMA = 600000 
			{
				SMA = 983000
				ECC = 0.0011
				INC = 89
				LPE = 196
				LAN = 37
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Bop

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Bop surface is SMA = 65000
			{
				SMA = 142400
				ECC = 0.0011
				INC = 89.29
				LPE = 19
				LAN = 300
				REF = 1
			}
		}
		
		// Pol has two orbits because there is no overlap in Altimetry and Multispectral altitudes.
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Pol

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Pol surface is SMA = 44000
			{
				SMA = 51700
				ECC = 0.0011
				INC = 89.83
				LPE = 97
				LAN = 42
				REF = 1
			}
		}
		
		// Use this to generate an orbit with specific parameters
		FIXED_ORBIT
		{
			// Body for the orbit - defaulted from the contract if not supplied
			targetBody = Pol

			// Actual orbit details. Note that REF represents the reference
			// body - but will be overriden by the targetBody.
			
			ORBIT
			// Pol surface is SMA = 44000
			{
				SMA = 121500
				ECC = 0.0011
				INC = 89.37
				LPE = 97
				LAN = 42
				REF = 1
			}
		}
	}
}
