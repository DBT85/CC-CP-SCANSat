CONTRACT_TYPE:NEEDS[SCANsat]
{
	// Any suggestions or corrections? Send me a note on http://forum.kerbalspaceprogram.com/members/118151-DBT85
	// This contract only work with Contract Configurator and SCANsat 9.0
	

    name = ScanMinmus

    // Contract text
    title = Altimetry Scan of Minmus
    description = Heads up, Director. There is more work to be done. With the Kerbin scans coming along nicely and Mun scans underway, the team feel it's time we got some data about Minmus. We think it's very flat in places, but we'll know more once you've got us this data.
    synopsis = Send an unkerbaled vessel into a Minmus orbit, reach a 74km orbit with an 79.5 degree inclination and scan Minmus's surface with the SCAN Radar Altimetry Sensor. You'll see a suggested orbit in the Tracking Station, but feel free to just hit the targets below.
    completedMessage = Excellent work. As expected Kerbins second celestial satellite is very flat in places, with some bumpy bits. The guys are already preparing a party in the mess. Free Ice Cream!

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Minmus
	
	// Always offered by the R&D department
	agent = Research & Development Department

    // Contract rewards, Minmus multiplies by 3.125 in Normal mode.
    advanceFunds = 6760
	rewardScience = 14
	rewardReputation = 19
    rewardFunds = 17500.0
	
	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	// Prestige level 2
	prestige = Significant
	
	// very likely to be chosen
	//weight = 10.0

	PARAMETER
	{
		// Named for the Scottish physicist who predicted the existence of electromagnetic waves.
		name = Maxwell3
		type = VesselParameterGroup

        define = Maxwell III
        disableOnStateChange = false
		
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}
		
		PARAMETER
		{
			name = HasPart1
			type = HasPart
			
			part = SCANsat_Scanner
			minCount = 1
		}
	
		
			PARAMETER
		{
			name = Orbit
			type = Orbit
			targetBody = Minmus
			title = Achieve an orbit with the following parameters
			minApA = 71210
			maxApA = 77305
			minPeA = 71103
			maxPeA = 77219
			minEccentricity = 0.0
			maxEccentricity = 0.00217
			minInclination = 79.0
			maxInclination = 80
			disableOnStateChange = false
		}
					
		// Once all of the above are complete, start the countdown.			
		PARAMETER
		{
			name = Duration
			type = Duration

			duration = 3h 30m

			preWaitText = We need a stable orbit for at least 
			waitingText = Orbit acquired, monitoring.
			completionText = Stable orbit confirmed!
		}
	}
	
	PARAMETER
	{
		name = SCANsatCoverage1
		type = SCANsatCoverage
		targetBody = Minmus
		
		// Requires 50% SCAN coverage to complete
		coverage = 50.0
		scanType = AltimetryLoRes
	}
	
//	REQUIREMENT
//	{
//		name = All1
//		type = All
//	
//		REQUIREMENT
//		{
//			name = SCANsatCoverage2
//			type = SCANsatCoverage
//
//			targetBody = Kerbin
//
//			// Contract will not be activated until 65% of Kerbin has LoRes data
//			maxCoverage = 100.0
//			minCoverage = 65.0		
//
//			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
//			scanType = AltimetryLoRes
//		}
//		
//		REQUIREMENT
//		{
//			name = SCANsatCoverage3
//			type = SCANsatCoverage
//
//			targetBody = Mun
//
//			// Contract will not be activated until 15% of Mun has LoRes data
//			maxCoverage = 100.0
//			minCoverage = 15.0		
//
//			// The type of scan to perform. Valid values are from SCANdata.SCANtype.
//			scanType = AltimetryLoRes
//		}
//		
//		REQUIREMENT
//		{
//			name = SCANsatCoverage4
//			type = SCANsatCoverage
//
//			targetBody = Minmus
//
//			// The contract will not be activated if Minmus has 50% LoRes data
//			maxCoverage = 49.9
//			minCoverage = 0.0		
//
//			// The type of scan to perform.  Valid values are from SCANdata.SCANtype.
//			scanType = AltimetryLoRes
//		}
//	}
		

	BEHAVIOUR
	{
    name = OrbitGenerator1
    type = OrbitGenerator

    // Use this to generate an orbit with specific parameters
    FIXED_ORBIT
    {
        // Body for the orbit - defaulted from the contract if not supplied
        targetBody = Minmus

        // Actual orbit details. Note that REF represents the reference
        // body - but will be overriden by the targetBody.
		
        ORBIT
        // Minmus surface is SMA = 60000
		{
            SMA = 133986
            ECC = 0.0001
            INC = 79.5
            LPE = 270
            LAN = 203
            MNA = 1.55872660382504
            EPH = 31.3999999999994
            REF = 1
        }
    }
	}
}
